[구동 시]
$ docker ps -a =>컨테이너 실행 확인
$ docker start oracle12c =>  컨테이너 실행
$ docker ps -a

[중지 시]
$ docker stop oracle12c
$ docker-machine stop

[django 서버 구동시]
$ python manage.py runserver  => django 서버 구동

[DB 테이블 생성]
$ python manage.py check
$ python manage.py makemigrations board
$ python manage.py migrate board


# 파일명 : board/urls.py - 직접 생성
from django.urls import path
from . import views

urlpatterns = [
    path('list', views.list, name="list"),
    path('write', views.write, name="write"),
    path('content', views.content, name="content"),
    path('edit', views.edit, name="edit"),
    path('delete', views.delete, name="delete"),
    path('dataframe', views.dataframe, name="dataframe"),

    path('t2_insert', views.t2_insert, name="t2_insert"),
    path('t2_list', views.t2_list, name="t2_list"),
    path('t2_delete', views.t2_delete, name="t2_delete"),
    path('t2_update', views.t2_update, name="t2_update"),
]




##파일명 : board/models.py #############################
from django.db import models


class Table1(models.Model):
    objects  = models.Manager() #vs code 오류 제거용

    no      = models.AutoField(primary_key=True)
    title   = models.CharField(max_length=200)
    content = models.TextField() 
    writer  = models.CharField(max_length=50)
    hit     = models.IntegerField()
    img     = models.BinaryField(null=True) #바이너리 필드
    regdate = models.DateTimeField(auto_now_add=True)


class Table2(models.Model):
    objects  = models.Manager() #vs code 오류 제거용

    no      = models.AutoField(primary_key=True)
    name    = models.CharField(max_length=30)
    kor     = models.IntegerField()
    eng     = models.IntegerField()
    math    = models.IntegerField()
    regdate = models.DateTimeField(auto_now_add=True)



## 파일명 : board/views.py  ########################
from django.shortcuts import render, redirect
from django.http import HttpResponse
from django.views.decorators.csrf import csrf_exempt
from django.db import connection
from base64 import b64encode 
import pandas as pd
cursor = connection.cursor() #sql문 수행위한 cursor객체

############################
from .models import Table2 #models.py파일의 Table2클래스

@csrf_exempt
def t2_update(request):
    if request.method == 'GET':
        n = request.GET.get("no",0)
        #SELECT * FROM BOARD_TABLE2 WHERE NO=%s
        row = Table2.objects.get(no=n)
        return render(request, 
            'board/t2_update.html',{"one":row})
    elif request.method == 'POST':
        n = request.POST['no']
        obj = Table2.objects.get(no=n) #obj객체 가져옴
        obj.name = request.POST['name'] # 변수에 값
        obj.kor = request.POST['kor']
        obj.eng = request.POST['eng']
        obj.math = request.POST['math']
        obj.save() #저장하기 수행
        # UPDATE BOARD_TABLE2 SET
        # NAME=%s, KOR=%s, ENG=%s, MATH=%s
        # WHERE NO= %s
        return redirect("/board/t2_list")



@csrf_exempt
def t2_delete(request):
    if request.method == 'GET':
        n = request.GET.get("no",0)
        
        #SELECT * FROM BOARD_TABLE2 WHERE NO=%s
        row = Table2.objects.get(no=n)
        #DELETE FROM BOARD_TABLE2 WHERE NO=%s
        row.delete()  # 삭제

        return redirect("/board/t2_list")
            


@csrf_exempt
def t2_list(request):
    if request.method == 'GET':
        rows = Table2.objects.all() 
        #SQL : SELECT * FROM BOARD_TABLE2
        print(rows) #결과확인
        print(type(rows)) #타입확인
        return render(request, 
            'board/t2_list.html',{"list":rows})   
            #html표시

@csrf_exempt
def t2_insert(request):
    if request.method == 'GET':
          return render(request, 
            'board/t2_insert.html')  
    elif request.method == 'POST':
        obj = Table2() #obj객체 생성
        obj.name = request.POST['name'] # 변수에 값
        obj.kor = request.POST['kor']
        obj.eng = request.POST['eng']
        obj.math = request.POST['math']
        obj.save() #저장하기 수행
        
        return redirect("/board/t2_insert")


def dataframe(request):
    if request.method == 'GET':
        df = pd.read_sql(
            """
            SELECT NO, WRITER, HIT, REGDATE 
            FROM BOARD_TABLE1
            """, con=connection)
        print(df)    
        print(df['NO'])
        return render(request, 
            'board/dataframe.html',
            {"df":df.to_html(classes="table")})  


@csrf_exempt  
def edit(request):
    if request.method == 'GET':
        no = request.GET.get("no", 0) 
        sql = """
            SELECT NO, TITLE, CONTENT  
            FROM  BOARD_TABLE1
            WHERE NO=%s
        """
        cursor.execute(sql, [no])
        data = cursor.fetchone()
        return render(request, 'board/edit.html',
             {"one":data}) 
             
    elif request.method == 'POST':         
        no = request.POST['no']
        ti = request.POST['title']
        co = request.POST['content']
        arr = [ti, co, no]
        sql = """
            UPDATE BOARD_TABLE1 SET TITLE=%s, 
            CONTENT=%s WHERE NO=%s
        """
        cursor.execute(sql, arr)
        return redirect("/board/content?no="+no)


@csrf_exempt  
def delete(request):
    if request.method == 'GET':   
        # request.GET.get("no", 1)     
        no = request.GET.get("no", 0)
        sql = """
            DELETE FROM BOARD_TABLE1
            WHERE NO=%s
        """
        cursor.execute(sql, [no])
        return redirect("/board/list")


@csrf_exempt  
def content(request):
    if request.method == 'GET':
        no = request.GET.get('no', 0)  
        # request.GET['no']
        if no == 0 :
            return redirect("/board/list") # <a href와 같음

        if request.session['hit'] == 1:
            #조회수 1증가 시킴
            sql = """
                UPDATE BOARD_TABLE1 SET HIT=HIT+1
                WHERE NO = %s    
            """
            cursor.execute(sql, [no])
            request.session['hit'] = 0

        # 이전글 번호 가져오기
        sql = """
            SELECT NVL(MAX(NO), 0)
            FROM BOARD_TABLE1
            WHERE NO < %s
        """
        cursor.execute(sql, [no])
        prev = cursor.fetchone()

        # 다음글 번호 가져오기
        sql = """
            SELECT NVL(MIN(NO), 0)
            FROM BOARD_TABLE1
            WHERE NO > %s
        """
        cursor.execute(sql, [no])
        next = cursor.fetchone()

        # 게시물 내용 가져오기
        sql = """
            SELECT 
                NO, TITLE, CONTENT, WRITER, HIT,  
                TO_CHAR(REGDATE, 'YYYY-MM-DD HH:MI:SS'),
                IMG 
            FROM 
                BOARD_TABLE1
            WHERE
                NO = %s
        """
        cursor.execute(sql, [no])
        data = cursor.fetchone()  # (1,2,3,4,5,6)

        if data[6] : # DB에 BLOB로 있는 경우
            img = data[6].read() # 바이트배열을 img에 넣음
            img64 = b64encode(img).decode("utf-8")
        else : # 없는 경우
            file = open('./static/img/default.jpg', 'rb')
            img = file.read()
            img64 = b64encode(img).decode("utf-8")

        #print(no)   #  (9,)
        return render(request, 'board/content.html',
             {"one":data, "image":img64, 
             "prev":prev[0], "next":next[0]}) 


@csrf_exempt  
def list(request):
    if request.method == 'GET':
        request.session['hit'] = 1  #세션에 hit=1
        sql = """
            SELECT 
                NO, TITLE, WRITER, 
                HIT, TO_CHAR(REGDATE, 'YYYY-MM-DD HH:MI:SS') 
            FROM 
                BOARD_TABLE1
            ORDER BY NO DESC
        """
        cursor.execute(sql)
        data = cursor.fetchall()
        print( type(data) ) 
        print( data )        #[(    ),(    ) ]
        return render(request, 'board/list.html'
                            , {"abc":data}) 


@csrf_exempt  
def write(request):
    if request.method == 'GET':
        return render(request, 'board/write.html') 
    elif request.method == 'POST':
        tmp = None
        if 'img' in request.FILES:
            img = request.FILES['img']        
            tmp = img.read()

        arr = [ 
            request.POST['title'],
            request.POST['content'],
            request.POST['writer'],
            tmp
        ]

        try :
            # print(arr)
            sql = """
                INSERT INTO BOARD_TABLE1
                (TITLE, CONTENT, WRITER, IMG, HIT, REGDATE)
                VALUES(%s, %s, %s, %s, 234, SYSDATE)
            """
            cursor.execute(sql, arr)
        except Exception as e:
            print(e)    
        
        return redirect("/board/list") # <a href와 같음


# templates/board/t2_insert.html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>insert</title>
</head>
<body>
    <h3>insert</h3>
    <hr />
    <form action="/board/t2_insert" method="post">
        <table>
            <tr>
                <td><input type="text" name="name" /></td>
                <td><input type="text" name="kor" /></td>
                <td><input type="text" name="eng" /></td>
                <td><input type="text" name="math" /></td>            
            </tr>
        </table>
        <input type="submit" value="추가" />
        <a href="/board/t2_list">목록</a>
    </form>
</body>
</html>    


# templates/board/t2_update.html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>update</title>
</head>
<body>
    <h3>update</h3>
    <hr />
    <form action="/board/t2_update" method="post">
        <table>
            <tr>
                <td>
                    <input type="hidden" name="no"
                       value="{{ one.no }} " />
                    <input type="text" name="name" 
                        value="{{ one.name }}" />
                </td>
                <td>
                    <input type="text" name="kor"
                    value="{{ one.kor }}" />
                </td>
                <td>
                    <input type="text" name="eng" 
                    value="{{ one.eng }}" />
                </td>
                <td>
                    <input type="text" name="math" 
                    value="{{ one.math }}" />
                </td>
            </tr>
        </table>
        <input type="submit" value="수정" />
    </form>
</body>
</html>    


# templates/board/t2_list.html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>list</title>
</head>
<body>
    <table border="1">
        {% for one in list %}
        <tr>
            <td>{{ one.no }}</td>
            <td>{{ one.name }}</td>
            <td>{{ one.kor }}</td>
            <td>{{ one.eng }}</td>
            <td>{{ one.math }}</td>            
            <td>{{ one.regdate }}</td>            
            <td>
                <a href="/board/t2_delete?no={{ one.no }}">삭제</a>
                <a href="/board/t2_update?no={{ one.no }}">수정</a>
            </td>
        </tr>
        {% endfor %}
    </table>
    <a href="/board/t2_insert">추가</a>
</body>
</html>


####일괄추가/수정###################################

## 파일명 : board/urls.py ##########################
from django.urls import path
from . import views

urlpatterns = [
    path('list', views.list, name="list"),
    path('write', views.write, name="write"),
    path('content', views.content, name="content"),
    path('edit', views.edit, name="edit"),
    path('delete', views.delete, name="delete"),
    path('dataframe', views.dataframe, name="dataframe"),

    path('t2_insert', views.t2_insert, name="t2_insert"),
    path('t2_list', views.t2_list, name="t2_list"),
    path('t2_delete', views.t2_delete, name="t2_delete"),
    path('t2_update', views.t2_update, name="t2_update"),

    path('t2_insert_all', views.t2_insert_all, name="t2_insert_all"),
    path('t2_update_all', views.t2_update_all, name="t2_update_all"),
]



## 파일명 : board/views.py  ########################
from django.shortcuts import render, redirect
from django.http import HttpResponse
from django.views.decorators.csrf import csrf_exempt
from django.db import connection
from base64 import b64encode 
import pandas as pd
cursor = connection.cursor() #sql문 수행위한 cursor객체


from .models import Table2 #models.py파일의 Table2클래스

def t2_update_all(request):
    if request.method == 'GET':
        n = request.session['no'] # n = [8, 5 ,3]
        print(n)
        # SELECT * FROM BOARD_TABLE2 WHERE NO=8 OR NO=5 OR NO=3
        # SELECT * FROM BOARD_TABLE2 WHERE NO IN (8,5,3)
        rows = Table2.objects.filter(no__in=n)
        return render(request, 
            'board/t2_update_all.html', {"list":rows})
    elif request.method == 'POST':
        menu = request.POST['menu']
        if menu == '1':
            no = request.POST.getlist("chk[]")
            request.session['no'] = no
            print(no)
            return redirect("/board/t2_update_all")
        elif menu == '2':
            no = request.POST.getlist("no[]")
            name = request.POST.getlist("name[]")
            kor = request.POST.getlist("kor[]")
            eng = request.POST.getlist("eng[]")
            math = request.POST.getlist("math[]")
            objs = []
            for i in range(0, len(no),1):
                obj = Table2.objects.get(no=no[i])
                obj.name = name[i]
                obj.kor = kor[i]
                obj.eng = eng[i]
                obj.math = math[i]
                objs.append(obj)
                
            Table2.objects.bulk_update(objs,
                    ["name","kor","eng","math"])

            return redirect("/board/t2_list")   

def t2_insert_all(request):
    if request.method == 'GET':
        return render(request, 
            'board/t2_insert_all.html', {"cnt":range(5)})  
    elif request.method == 'POST':
        na = request.POST.getlist('name[]')
        ko = request.POST.getlist('kor[]')
        en = request.POST.getlist('eng[]')
        ma = request.POST.getlist('math[]')
        
        objs = []
        for i in range(0, len(na), 1):
            obj = Table2()
            obj.name = na[i] 
            obj.kor = ko[i] 
            obj.eng = en[i] 
            obj.math = ma[i]
            objs.append(obj)

        #일괄 추가
        Table2.objects.bulk_create(objs)
        return redirect("/board/t2_list")

@csrf_exempt
def t2_update(request):
    if request.method == 'GET':
        n = request.GET.get("no",0)
        #SELECT * FROM BOARD_TABLE2 WHERE NO=%s
        row = Table2.objects.get(no=n)
        return render(request, 
            'board/t2_update.html',{"one":row})
    elif request.method == 'POST':
        n = request.POST['no']
        obj = Table2.objects.get(no=n) #obj객체 가져옴
        obj.name = request.POST['name'] # 변수에 값
        obj.kor = request.POST['kor']
        obj.eng = request.POST['eng']
        obj.math = request.POST['math']
        obj.save() #저장하기 수행
        # UPDATE BOARD_TABLE2 SET
        # NAME=%s, KOR=%s, ENG=%s, MATH=%s
        # WHERE NO= %s
        return redirect("/board/t2_list")

@csrf_exempt
def t2_delete(request):
    if request.method == 'GET':
        n = request.GET.get("no",0)
        
        #SELECT * FROM BOARD_TABLE2 WHERE NO=%s
        row = Table2.objects.get(no=n)
        #DELETE FROM BOARD_TABLE2 WHERE NO=%s
        row.delete()  # 삭제

        return redirect("/board/t2_list")
            
@csrf_exempt
def t2_list(request):
    if request.method == 'GET':
        rows = Table2.objects.all() 
        #SQL : SELECT * FROM BOARD_TABLE2
        print(rows) #결과확인
        print(type(rows)) #타입확인
        return render(request, 
            'board/t2_list.html',{"list":rows})   
            #html표시

@csrf_exempt
def t2_insert(request):
    if request.method == 'GET':
          return render(request, 
            'board/t2_insert.html')  
    elif request.method == 'POST':
        obj = Table2() #obj객체 생성
        obj.name = request.POST['name'] # 변수에 값
        obj.kor = request.POST['kor']
        obj.eng = request.POST['eng']
        obj.math = request.POST['math']
        obj.save() #저장하기 수행
        
        return redirect("/board/t2_insert")

def dataframe(request):
    if request.method == 'GET':
        df = pd.read_sql(
            """
            SELECT NO, WRITER, HIT, REGDATE 
            FROM BOARD_TABLE1
            """, con=connection)
        print(df)    
        print(df['NO'])
        return render(request, 
            'board/dataframe.html',
            {"df":df.to_html(classes="table")})  


@csrf_exempt  
def edit(request):
    if request.method == 'GET':
        no = request.GET.get("no", 0) 
        sql = """
            SELECT NO, TITLE, CONTENT  
            FROM  BOARD_TABLE1
            WHERE NO=%s
        """
        cursor.execute(sql, [no])
        data = cursor.fetchone()
        return render(request, 'board/edit.html',
             {"one":data}) 
             
    elif request.method == 'POST':         
        no = request.POST['no']
        ti = request.POST['title']
        co = request.POST['content']
        arr = [ti, co, no]
        sql = """
            UPDATE BOARD_TABLE1 SET TITLE=%s, 
            CONTENT=%s WHERE NO=%s
        """
        cursor.execute(sql, arr)
        return redirect("/board/content?no="+no)


@csrf_exempt  
def delete(request):
    if request.method == 'GET':   
        # request.GET.get("no", 1)     
        no = request.GET.get("no", 0)
        sql = """
            DELETE FROM BOARD_TABLE1
            WHERE NO=%s
        """
        cursor.execute(sql, [no])
        return redirect("/board/list")


@csrf_exempt  
def content(request):
    if request.method == 'GET':
        no = request.GET.get('no', 0)  
        # request.GET['no']
        if no == 0 :
            return redirect("/board/list") # <a href와 같음

        if request.session['hit'] == 1:
            #조회수 1증가 시킴
            sql = """
                UPDATE BOARD_TABLE1 SET HIT=HIT+1
                WHERE NO = %s    
            """
            cursor.execute(sql, [no])
            request.session['hit'] = 0

        # 이전글 번호 가져오기
        sql = """
            SELECT NVL(MAX(NO), 0)
            FROM BOARD_TABLE1
            WHERE NO < %s
        """
        cursor.execute(sql, [no])
        prev = cursor.fetchone()

        # 다음글 번호 가져오기
        sql = """
            SELECT NVL(MIN(NO), 0)
            FROM BOARD_TABLE1
            WHERE NO > %s
        """
        cursor.execute(sql, [no])
        next = cursor.fetchone()

        # 게시물 내용 가져오기
        sql = """
            SELECT 
                NO, TITLE, CONTENT, WRITER, HIT,  
                TO_CHAR(REGDATE, 'YYYY-MM-DD HH:MI:SS'),
                IMG 
            FROM 
                BOARD_TABLE1
            WHERE
                NO = %s
        """
        cursor.execute(sql, [no])
        data = cursor.fetchone()  # (1,2,3,4,5,6)

        if data[6] : # DB에 BLOB로 있는 경우
            img = data[6].read() # 바이트배열을 img에 넣음
            img64 = b64encode(img).decode("utf-8")
        else : # 없는 경우
            file = open('./static/img/default.jpg', 'rb')
            img = file.read()
            img64 = b64encode(img).decode("utf-8")

        #print(no)   #  (9,)
        return render(request, 'board/content.html',
             {"one":data, "image":img64, 
             "prev":prev[0], "next":next[0]}) 


@csrf_exempt  
def list(request):
    if request.method == 'GET':
        request.session['hit'] = 1  #세션에 hit=1
        sql = """
            SELECT 
                NO, TITLE, WRITER, 
                HIT, TO_CHAR(REGDATE, 'YYYY-MM-DD HH:MI:SS') 
            FROM 
                BOARD_TABLE1
            ORDER BY NO DESC
        """
        cursor.execute(sql)
        data = cursor.fetchall()
        print( type(data) ) 
        print( data )        #[(    ),(    ) ]
        return render(request, 'board/list.html'
                            , {"abc":data}) 


@csrf_exempt  
def write(request):
    if request.method == 'GET':
        return render(request, 'board/write.html') 
    elif request.method == 'POST':
        tmp = None
        if 'img' in request.FILES:
            img = request.FILES['img']        
            tmp = img.read()

        arr = [ 
            request.POST['title'],
            request.POST['content'],
            request.POST['writer'],
            tmp
        ]

        try :
            # print(arr)
            sql = """
                INSERT INTO BOARD_TABLE1
                (TITLE, CONTENT, WRITER, IMG, HIT, REGDATE)
                VALUES(%s, %s, %s, %s, 234, SYSDATE)
            """
            cursor.execute(sql, arr)
        except Exception as e:
            print(e)    
        
        return redirect("/board/list") # <a href와 같음


## 파일명 : templates/board/t2_list.html ##################
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>list</title>
</head>

<body>
    <form action="/board/t2_update_all" method="post">
        {% csrf_token %}
        <input type="hidden" name="menu" value="1" />
        <table border="1">
            {% for one in list %}
            <tr>
                <td>
                    <input type="checkbox" value="{{one.no}}" 
                        name="chk[]" />
                    {{one.no}}
                </td>
                <td>{{one.name}}</td>
                <td>{{one.kor}}</td>
                <td>{{one.eng}}</td>
                <td>{{one.math}}</td>            
                <td>{{one.regdate}}</td>            
                <td>
                    <a href="/board/t2_delete?no={{one.no}}">삭제</a>
                    <a href="/board/t2_update?no={{one.no}}">수정</a>
                </td>
            </tr>
            {% endfor %}
        </table>
        <input type="submit" value="일괄수정" />
        <a href="/board/t2_insert">추가</a>
        <a href="/board/t2_insert_all">일괄추가</a>
    </form>
</body>
</html>

## 파일명 : templates/board/t2_insert_all.html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>insert</title>
</head>
<body>
    <h3>insert</h3>
    <hr />
    <form action="/board/t2_insert_all" method="post">
        {% csrf_token %}
        <table>
            {% for i in cnt %}
            <tr>
                <td><input type="text" name="name[]" value="b_{{i}}" /></td>
                <td><input type="text" name="kor[]" value="34" /></td>
                <td><input type="text" name="eng[]" value="67"/></td>
                <td><input type="text" name="math[]" value="78" /></td>            
            </tr>
            {% endfor %}
        </table>
        <input type="submit" value="추가" />
        <a href="/board/t2_list">목록</a>
    </form>
</body>
</html>    


## 파일명 : templates/board/t2_update_all.html ############
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
</head>

<body>

<form action="/board/t2_update_all" method="post">
    {% csrf_token %}
    <input type="hidden" name="menu" value="2" />
    <table border="0">
        {% for one in list %}
        <tr>
            <td><input type="text" name="no[]" value="{{one.no}}" readonly /></td>
            <td><input type="text" name="name[]" value="{{one.name}}" /></td>
            <td><input type="text" name="kor[]" value="{{one.kor}}" /></td>
            <td><input type="text" name="eng[]" value="{{one.eng}}" /></td>
            <td><input type="text" name="math[]" value="{{one.math}}" /></td>
        </tr>
        {% endfor %}
    </table>
    <input type="submit" value="일괄수정" />
</form>
    
</body>
</html>
